Версія: 1.1

    Створи репозиторій goit-markup-hw-03.
    Склонуй створений репозиторій і скопіюй в нього файли попередньої роботи.
    Додай стилі для геометрії (ширини, відступи, поля і рамки) і позиціонування контенту за допомогою Flexbox для сторінок макета домашнього завдання #3.
    Налаштуй GitHub Pages і додай посилання на живу сторінку в шапку GitHub-репозиторія.

Критерії приймання роботи наставником
Проект

«A1» У корені проекту є папка images з зображеннями.

«A2» У корені проекту є папка css з файлами стилів.

«A3» Всі стилі написані в одному файлі styles.css, який знаходиться в папці css.

«A4» У назвах файлів відсутні великі літери, пробіли і трансліт, тільки літери і слова англійської мови.

«A5» Вихідний код відформатований за допомогою Prettier.

«A6» Всі зображення та текстовий контент взяті з макета.

«A7» На всіх HTML-сторінках підключений нормалізатор стилів modern-normalize.

«A7» Код написаний з дотриманням настанови.
Оформлення

«B1» Допускається глобальне скидання стилів за селектором тегу для елементів <h1>...<h6>, <p> і <ul>.

«B2» В елементів відсутні зовнішні відступи (властивість margin), що «пробивають» батьківський елемент.

«B3» В однорядкових колекціях елементів очищений крайній лівий або правий margin елементів (якщо він є).

«B4» Для відступів між двома сусідніми елементами використовується властивість margin.

«B5» Для проміжку між межею батька і його дитиною використовується властивість padding.

«B6» Розміри зовнішніх відступів (властивість margin) і внутрішніх полів (властивість padding) елементів задані точно за макетом.

«B7» Створений загальний допоміжний клас .container для центрування і обмеження контенту по ширині.

«B8» Ширина «контейнера» відповідає макету і дорівнює 1158px.

«B9» «Контейнер» обгортає контент хедера, футера і секцій. Тобто знаходиться всередині них.

«B10» Для розташування елементів використовується Flexbox, але тільки там, де це необхідно. Наприклад у шапці, навігації, списках в секціях тощо, тобто там, де розташувати елементи горизонтально по-іншому неможливо.

«B11» Фінальні розміри блоків в браузері відповідають макету.

«B12» В елементів відсутня фіксована висота, вона визначається їх контентом.

«B13» У хедера є нижня рамка, необхідно сильно наблизити макет, щоб побачити її.

«B14» Секції розташовані одна під одною як стопка книг, без зовнішніх відступів.

«B15» Для секцій використовується один клас .section,в якому задані відповідні падінги, що відсувають контент всередину секції.

«B16» Для побудови сіток використовується техніка, що описана у конспекті і відео-майстерні.

«B17» У картках на сторінці Портфоліо є рамка (властивість border), але тільки у нижній частині картки.




Ну що ж беремося за дуже важливу та цікаву тему - Флекси
Основним джерелом необхідної інформації для виконання ДЗ – конспект, відеоуроки Олександра Репети та живі вебінари з викладачем.
Особливу увагу рекомендується приділити розумінню блочної моделі - фундамент перед вивченням позиціонування. Без розуміння цього принципу буде важко зрозуміти як технічно правильно надалі позиціонувати елементи на сторінці незалежно від типу пристрою та його розширення.
Основні моменти, на які варто звернути увагу під час виконання ДЗ:
Структуру для ДЗ берете із останньої прийнятої попередньої роботи.
Контейнер для контенту (div із класом container) -- один для двох сторінок. Знаходиться у кожній секції, у header та footer.
<section> <div class="container"> контент секції </div> </section>
Як зробити сітку карток на сторінці портфоліо - інформація є у конспекті та у відео.
Flex використовувати тільки там, де це дійсно необхідно.
У нас немає фіксованої висоти. Висота – це динамічна величина, яку задає контент.
Розуміти що таке маржини та паддінги, і де їх правильно застосовувати.
Для правильного приховування заголовків використовуємо патерн – visually-hidden.
Хедер має нижній бордер на обох сторінках по ширині всієї сторінки - не забуваємо про нього.
ДЗ виконується згідно з ТЗ.
Код валідний форматований за допомогою prettier.
Імена класів описові. Ніяких великих букв і цифр. Властивості, що повторюються поєднуємо.
Зайвий код та непотрібні коментарі відсутні.
Додаткові матеріали:
Один з варіантів як правильно і семантично приховувати елемент -
.visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  border: 0;
  padding: 0;
  white-space: nowrap;
  clip-path: inset(100%);
  clip: rect(0 0 0 0);
  overflow: hidden;
}
Все, що потрібно знати про CSS Margin https://habr.com/ru/post/465839/
Особливості inline-block елементів - https://css-tricks.com/fighting-the-space-between-inline-block-elements/
Повний посібник з Flexbox - https://css-tricks.com/snippets/css/a-guide-to-flexbox/
Гра по Flexbox - http://flexboxfroggy.com/#ru
Ще одна гра на вивчення флексів https://mastery.games/flexboxzombies/
Генератор nth-child https://nthchild.kawalekkodu.pl/en/


Ось трохи вводної інформації з нашого дз.
Хедер, секції та футер ставляться один на одного, як цегла. Між ними немає зовнішніх відступів(margin).
Контейнер (це негласне правило так називати) – один для всього сайту. Він завжди усередині секції. Його основна мета – обмежити по ширині та горизонтально вирівняти контент. Верхніх і нижніх маржин/паддингів зазвичай йому не задають.
container { max-width: ширина контетної частини(1128px) + падінги по боках(15px) = 1158px padding: 0 15px; margin: 0 auto; }
Хедер – великий смисловий елемент, як і секція. У нього є невелика особливість: висота header формується падінгами посилань.
Секція - автономний розділ документа. ЗАВЖДИ на 100% ширини екрану. Саме їй задаються паддінги (верхні та нижні), а також фон.
використовуйте outline для візуальної оцінки, чи правильно ви дали відступ: margin-зовнішній відступ, застосовується для сусідніх елементів, padding - внутрішній відступ (грубо кажучи від рамки до контенту). Вертикальні марджини схлопуются та вибираєтся значенян яке більше https://monosnap.com/file/DjAecECtKbzDJk9AIaG0TbSGCgDXAx
Посиланням у хедері доречно задавати вертикальні паддінги, щоб збільшити клікабельну область.
Марджинів між секціями на макеті немає. Відступи по 120рх - це ПАДДІНГИ.
Не забувайте задавати елементам списків у секціях ширину.
flex-basis або width: calc( (ширина батьківського елемента - кількість проміжків * марджин елемента) / кількість наших елементів в рядку)
При цьому замість властивості justify-content: space-between більш надійним варіантом буде задати відступи між елементами (li) за допомогою марджинів (крайні відступи не забуваємо обнуляти) або gap.
Для тега img задаємо властивість display: block, max-width: 100%, height: auto.
Елементам, для яких це потрібно, задаємо бордери.
Нижню частину карток із членами команди та карток портфоліо (елементи під зображенням) доречно огорнути в div, якому задати паддінги з усіх боків.
Фіксовану висоту (властивість height) елементам не задаємо!!!
У деяких елементах можуть бути дефолтні, застосовані браузером, марджини та паддінги, які візуально схожі за розмірами на ті, які вам потрібні (наприклад, у заголовків, абзаців та списків). Але на це сподіватися не варто: все, що за дефолтом, обнуляємо, і задаємо відступи явно - у тих випадках і в тому розмірі, в яких нам потрібно.
Ну і, зрозуміло, уважно читаємо ТЗ:ура:
